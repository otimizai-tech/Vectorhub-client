services:
  redis:
    image: "redis/redis-stack:latest"
    ports:
      - "${REDIS_PORT}:6379"
      - "8001:8001"
    volumes:
      - ./endpoint_data/redis_storage:/data
    networks:
      - internal-network

  edgedb:
    image: edgedb/edgedb:5
    environment:
      EDGEDB_SERVER_TLS_CERT_MODE: ${EDGEDB_SERVER_TLS_CERT_MODE}
      EDGEDB_SERVER_SECURITY: ${EDGEDB_SERVER_SECURITY}
      EDGEDB_SERVER_ADMIN_UI: ${EDGEDB_SERVER_ADMIN_UI}
      EDGEDB_SERVER_USER: ${EDGEDB_USER}
      EDGEDB_SERVER_PASSWORD: ${EDGEDB_PASSWORD}
    volumes:
      - ./db/edgedb/dbschema:/dbschema
      - ./db/edgedb/data:/var/lib/edgedb/data
      - ./db/edgedb/cli_config:/.config/edgedb
    ports:
      - "${EDGEDB_PORT}:5656"
    networks:
      - internal-network

  qdrant:
    image: "qdrant/qdrant:latest"
    ports:
      - "${QDRANT_PORT}:6333"
    volumes:
      - ./endpoint_data/qdrant_storage:/qdrant/storage
    networks:
      - internal-network

  api:
    image: otimizai/vectorhub-client:latest
    ports:
      - "${API_CLIENT_BACKEND_PORT}:8081"
    volumes:
      - ./__workdir__:/app/__workdir__
    depends_on:
      - redis
      - qdrant
      - edgedb
    networks:
      - internal-network
      - external-network
    env_file:
      - .env
    environment:
      TYPE_ENV: ${TYPE_ENV}  # Use the variable from .env
      REDIS_HOST: redis
      QDRANT_HOST: qdrant
      EDGEDB_HOST: edgedb
      SECRET_KEY_ADMIN: ${SECRET_KEY_ADMIN}



volumes:
  redis_data:
    driver: local
  qdrant_storage:
    driver: local
  api_data:
    driver: local

networks:
  internal-network:
    driver: bridge
  external-network:
    driver: bridge